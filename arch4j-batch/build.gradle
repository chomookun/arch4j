plugins {
    id 'java'
    id 'java-library'
    id 'io.freefair.lombok' version '8.10'
    id 'org.springframework.boot' version '3.4.1'
    id 'maven-publish'
    id 'com.google.cloud.tools.jib' version '3.4.4'
}

dependencies {

    // platform
    implementation platform(project(":arch4j-dependencies"))
    annotationProcessor platform(project(":arch4j-dependencies"))

    // subproject
    implementation project(":arch4j-core")

    // spring boot starter
    api 'org.springframework.boot:spring-boot-starter-batch'

    // spring batch test
    api 'org.springframework.boot:spring-boot-starter-test'
    api 'org.springframework.batch:spring-batch-test'

}

test {
    useJUnitPlatform()
    testLogging {
        events "failed"
        exceptionFormat = "full"
    }
}

jar {
    enabled = true
    archiveClassifier = ''
}

bootJar {
    enabled = true
    archiveClassifier = 'boot'
}

springBoot {
    buildInfo()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

jib {
    System.setProperty("sendCredentialsOverHttp", "true");
    allowInsecureRegistries = true
    from {
        image = project.jibFromImage
        auth {
            username = project.jibFromAuthUsername
            password = project.jibFromAuthPassword
        }
    }
    to {
        image = "${project.jibToImageNamespace}/${project.name}"
        auth {
            username = project.jibToAuthUsername
            password = project.jibToAuthPassword
        }
        tags = [project.jibToTags]
    }
    containerizingMode = "packaged"
    container {
        format = 'OCI'
        creationTime = "USE_CURRENT_TIMESTAMP"
        ports = ['8080']
        jvmFlags = ["-Dfile.encoding=UTF-8"]
    }
    extraDirectories {
        paths {
            path {
                from = file('src/dist/config')
                into = '/config'
            }
        }
    }
}
