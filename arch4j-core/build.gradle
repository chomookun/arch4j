plugins {
    id 'java'
    id 'java-library'
    id 'io.freefair.lombok' version '8.10'
    id 'org.springframework.boot' version '2.7.9'
    id 'idea'
    id 'maven-publish'
}

dependencies {

    // platform
    implementation platform(project(":arch4j-dependencies"))
    annotationProcessor platform(project(":arch4j-dependencies"))

    // spring boot starter
    api 'org.springframework.boot:spring-boot-starter'
    api 'org.springframework.boot:spring-boot-starter-test'
    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    api 'org.springframework.boot:spring-boot-starter-web'
    api 'org.springframework.boot:spring-boot-starter-security'
    api 'org.springframework.boot:spring-boot-starter-validation'
    api 'org.springframework.boot:spring-boot-starter-mail'
    api 'org.springframework.boot:spring-boot-starter-thymeleaf'
    api 'org.springframework.boot:spring-boot-starter-cache'

    // spring boot configuration processor
    api 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // query dsl
    api "com.querydsl:querydsl-jpa"
    api "com.querydsl:querydsl-apt"
    api 'org.hibernate:hibernate-jpamodelgen'
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor group: 'com.querydsl', name: 'querydsl-apt', classifier: 'jpa'
    annotationProcessor 'org.hibernate:hibernate-jpamodelgen'

    // javax.annotation-api
    api 'javax.annotation:javax.annotation-api'
    api 'com.google.code.findbugs:jsr305'

    // mybatis
    api 'org.mybatis.spring.boot:mybatis-spring-boot-starter'

    // h2database
    api 'com.h2database:h2'

    // mariadb
    api 'org.mariadb.jdbc:mariadb-java-client'

    // log4jdbc
    api 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

    // jackson
    api 'com.fasterxml.jackson.core:jackson-core'
    api 'com.fasterxml.jackson.core:jackson-databind'

    // jasypt
    api 'com.github.ulisesbocchio:jasypt-spring-boot-starter'

    // spring security
    api "org.springframework.security:spring-security-core"
    api "org.springframework.security:spring-security-crypto"

    // spring security test
    api 'org.springframework.security:spring-security-test'

    // apache commons
    api 'commons-io:commons-io'
    api 'org.apache.httpcomponents:httpclient'
    api 'org.apache.commons:commons-exec'
    api 'org.apache.commons:commons-math3'
    api 'org.apache.commons:commons-csv'

    // caffeine
    api "com.github.ben-manes.caffeine:caffeine"

    // model mapper
    api "org.modelmapper:modelmapper"

    // reflections
    api 'org.reflections:reflections'

    // ascii table
    api "de.vandermeer:asciitable"

    // data faker
    api "net.datafaker:datafaker"

    // jwt
    api 'io.jsonwebtoken:jjwt'
    api 'com.auth0:java-jwt'

    // mail
    api 'com.icegreen:greenmail'

    // jgit
    api 'org.eclipse.jgit:org.eclipse.jgit'

    // jsoup
    api 'org.jsoup:jsoup'

    // java websocket
    api 'org.java-websocket:Java-WebSocket'

    // okhttp
    api 'com.squareup.okhttp3:okhttp'

}

test {
    useJUnitPlatform()
    testLogging {
        events 'failed'
        exceptionFormat 'full'
    }
}

jar {
    enabled = true
    archiveClassifier = ''
}

bootJar {
    enabled = false
}

springBoot {
    buildInfo()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

